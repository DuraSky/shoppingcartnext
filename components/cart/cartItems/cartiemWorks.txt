import React, { useContext } from "react";
import { CartContext, actionTypes } from "../CartProvider";
import { QuantityControl } from "./allCartItemsStyle";
import Image from "next/image";

const CartItem = ({ item, index }) => {
  const { dispatch, onCartUpdate } = useContext(CartContext);

  // const updateCart = async (type, payload) => {
  //   console.log("updateCart called with type:", type, "payload:", payload);
  //   dispatch({ type, payload });
  //   const updatedItem = {
  //     bpId: item.bp_id,
  //     quantity: payload.value || item.quantity,
  //   };
  //   await onCartUpdate(updatedItem);
  // };
  const updateCart = async (quantity) => {
    console.log("updateCart called with quantity:", quantity);
    const updatedItem = { bpId: item.bp_id, quantity };
    await onCartUpdate(updatedItem);
  };

  const handleQuantityChange = async (event) => {
    const value = Number(event.target.value);
    if (value > 0) {
      console.log("handleQuantityChange called with value:", value);
      //await updateCart(actionTypes.CHANGE_QUANTITY, { index, value });
      await updateCart(value);

    }
  };

  const handleIncrement = async () => {
    console.log("handleIncrement called");
    // await updateCart(actionTypes.CHANGE_QUANTITY, {
    //   index,
    //   value: item.quantity + 1,
    // });
    await updateCart(item.quantity + 1);

  };

  const handleDecrement = async () => {
    if (item.quantity > 1) {
      console.log("handleDecrement called");
      // await updateCart(actionTypes.CHANGE_QUANTITY, {
      //   index,
      //   value: item.quantity - 1,
      // });
      await updateCart(item.quantity - 1);

    }
  };

  const handleRemove = async () => {
    console.log("handleRemove called");
    await updateCart(actionTypes.REMOVE_FROM_CART, index);
  };

  return (
    <>
      <div className="produktName">
        <Image
          src={item.image}
          alt={item.name}
          width={100}
          height={100}
          layout="responsive"
        />
        <p>{item.name}</p>
      </div>
      <div className="dostupnost">
        <p>{item.dostupnost}</p>
      </div>
      <div className="quantityControlWrapper">
        <QuantityControl>
          <button type="button" onClick={handleDecrement}>
            -
          </button>
          <input
            type="text"
            value={item.quantity}
            onChange={handleQuantityChange}
            className="quantity-input"
          />

          <button type="button" onClick={handleIncrement}>
            +
          </button>
        </QuantityControl>
      </div>
      <div className="itemPrice">
        <p>{item.price} Kč</p>
      </div>
      <div className="priceCalc">
        <p>{item.quantity * item.price} Kč</p>
      </div>
      <div className="removeFromCart">
        <button type="button" onClick={handleRemove} className="remove-button">
          X
        </button>
      </div>
    </>
  );
};

export default CartItem;
